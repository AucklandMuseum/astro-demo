---
import ContentfulComponent from "contentful-astro/ContentfulComponent.astro"
//console.log(Astro.props);
let {
  imageMetadata,
  title,
  subtitle,
  boldSubtitle,
  content,
  contentAlignment,
  behaviour,
  style,
  parent,
  parentStyle
} = Astro.props;

let type = "hero";

imageMetadata.fields["size"] = behaviour;
---

<div
  class:list={[
    "wrapper",
    type + style,
    type + behaviour,
    type + contentAlignment,
  ]}
>
  <div class={"image"}>
    <ContentfulComponent
      type={imageMetadata.sys.contentType.sys.id}
      {...imageMetadata.fields}
    />
  </div>
  <div class:list={["content"]}>
    <div class="h-full flex flex-col justify-center xl:max-w-3xl">
        <>
          {
            content?.map((comp: ContentfulComponent) => {
              comp.fields["parent"] = type + behaviour;
              comp.fields["parentStyle"] = style;
              return (
                <ContentfulComponent
                  type={comp.sys.contentType.sys.id}
                  {...comp.fields}
                />
              );
            })
          }
        </>
    </div>
  </div>
</div>

<style>
  .heroDark .content,
  .heroDark {
    @apply bg-black
  }

  .heroLight .content,
  .heroLight {
    @apply bg-gray-100
  }

  .wrapper {
    @apply md:flex md:flex-row w-full ;
  }

  .heroLarge.heroLeft .image {
    @apply w-full md:flex-grow md:-ml-[50%] order-2 z-0;
  }
  .heroLarge.heroRight .image {
    @apply w-full md:flex-grow md:-mr-[50%] z-0;
  }

  .heroLarge .content {
    @apply px-[24px] py-10 lg:py-32 lg:px-16 md:bg-opacity-50 md:w-6/12;
  }
  .heroLarge.heroLeft .content {
    @apply z-10;
  }
  .heroLarge.heroRight .content {
    @apply z-10;
  }

  .heroMedium .content {
    @apply px-5 py-10 lg:px-16 md:bg-opacity-50 md:w-6/12;
  }
  .heroMedium .image {
    @apply md:w-6/12;
  }

  .heroMedium.heroLeft .image {
    @apply order-1;
  }
</style>
